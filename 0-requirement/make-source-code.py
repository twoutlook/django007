
# 2016-08-28, by Mark
# 這程式讀取文本規格檔案，生成多個檔案
# blueprint --- 用戶的需求
# models --- 現在是生成 Item008, Item009 最大量的欄位
# template --- 智能式判斷顯示列表

'''
原字串以.區隔，顯示時每個item前要有[v]
'''
def add_bracket(inputstring):
    items = inputstring.split('.')
    out = ''
    for item in items:
        out += ' [v]'+item
    return out


'''
生成代碼的主程式
input: 
  inputfile --- Spec file
'''
def make_src(intputfile):
    # 一次性讀入規格
    f1=open(intputfile)
    lines=f1.readlines()
    f1.close()
    
    # 寫入 cola,colb,colc,colf 
    # cola = colb = colc = colf = [] #在這裡是不行的!
    # 應該可以寫成
    # colA,colB,colC,colG =[],[],[],[]
    colA = [] 
    colB = [] 
    colC = [] 
    colG = [] 
   
    '''
    
    '''
    outTh = '<tr>'   
    for th in ['A','B','C','D','E','F','G']:
        outTh += '<th>' + str(th) + '</th>'   
    outTh += '</tr>'   
    
    
    '''
    將讀入的 spec 
    分別放到 colA colB colC colD 四個 list
    
    
    
    '''
    i = 0
    for line in lines:
        i += 1
        seq = "{0:02d}".format(i)
        sects = line.split("|") 
        colA.append(sects[0])
        colB.append(sects[1])
        colC.append(sects[2])
        colG.append(sects[3].rstrip())
    # 
    out0 = '<!--### 顯示需求基模版-->\n'
    out0v2 = '<!--### 顯示需求基模版-->\n'
    out1 = '### source code for models\n'
    out2 = '<!-- source code for template, generated by make-source-code.py  -->\n'
    v=0
    for  v1,v2,v3,v4 in zip(colA,colB,colC,colG):
        v += 1
        #
        out0 += "    <tr><th>{0:d}</th><th>{1}</th><th>{2}</th><td>{3}</td><td></td><td></td><td></td><td colspan='2'>{4}</td></tr>\n".format(v,v1,v2, v3,v4)
        out0v2 += "    <tr><th>{0:d}</th><th>{1}</th><th>{2}</th><td>{3}</td><td></td><td></td><td></td><td colspan='2'>{4}</td></tr>\n".format(v,v1,v2, add_bracket(v3),add_bracket(v4))
    
        seq = '{0:02d}'.format(v)
            
    
        # fc = ' {{data.row'+seq+'c00'+'}} '    
        fc = ''    
        
        if (len(v3)>0):
            # out1 += '    row{0:02d}c00 = models.CharField(default=".",max_length=99,verbose_name="{1:s} {2:s} 零件")\n'.format(v, v1, v2)
            parts = v3.split(".")
            i=0
            for part in parts:
                i += 1
                sub = '{0:02d}'.format(i)
                # NullBooleanField shows dropdown, 
                # BooleanField shows checkbox, 
                
                # out1 +='    row{0:02d}c{1:02d} = models.NullBooleanField(verbose_name="{2:s} {3:s} 零件 => {4:s}")\n'.format(v,i,v1, v2, part)
                out1 +='    row{0:02d}c{1:02d} = models.BooleanField(default=False, verbose_name="{2:s} {3:s} 零件 => {4:s}")\n'.format(v,i,v1, v2, part)
                # by Mark, 2016-08-27
                fc += '\n      {% if data.row'+seq+'c'+sub+' %}'+ ' [v]'+part +'{% endif %}'
            
            out1 += '    row{0:02d}d00 = models.CharField(default=".",max_length=99,verbose_name="{1:s} {2:s} 進度一")\n'.format(v, v1, v2)
            out1 += '    row{0:02d}e00 = models.CharField(default=".",max_length=99,verbose_name="{1:s} {2:s} 進度二")\n'.format(v, v1, v2)
            out1 += '    row{0:02d}f00 = models.CharField(default=".",max_length=99,verbose_name="{1:s} {2:s} 進度三")\n'.format(v, v1, v2)
            # out1 += '    row{0:02d}g00 = models.NullBooleanField(verbose_name="{1:s} {2:s} 備註說明  正常")\n'.format(v,v1, v2)
            out1 += '    row{0:02d}g00 = models.BooleanField(default=True,verbose_name="{1:s} {2:s} 備註說明  正常")\n'.format(v,v1, v2)
        
        # fc += '\n      {% if data.row'+seq+'c'+sub+' %}'+ part +'{% endif %}'
        fg = '\n      {% if data.row'+seq+'g'+'00'+' is True %}'+ '[v]正常' +' {% endif %}'
        fg +='{% if data.row'+seq+'g'+'00'+' is False %}'+  '[v]不正常：'
        
    #  //   fg += '\n      {% if data.row'+seq+'c'+'00 == False'+' %}'+ '正常' +'{% endif %}'
        if (len(v4)>0):
            rems = v4.split(".")
            i=0
            for rem in rems:
                i += 1
                sub = '{0:02d}'.format(i)
                # out1 += '    row{0:02d}g{1:02d} = models.NullBooleanField(verbose_name="{2:s} {3:s} 備註說明 => {4:s}")\n'.format(v, i, v1,v2,rem)
                out1 += '    row{0:02d}g{1:02d} = models.BooleanField(default=False, verbose_name="{2:s} {3:s} 備註說明 => {4:s}")\n'.format(v, i, v1,v2,rem)
  
                #
                fg += '\n      {% if data.row'+seq+'g'+sub+' %}'+ '[v]'+rem +'{% endif %}'
  
        fg +='{% endif %}'
        
        #  {% if data.row01c01 %}row01c01{% endif %}
        
        fd = ' {{data.row'+ seq+ 'd00}} '
        fe = ' {{data.row'+ seq+ 'e00}} '
        ff = ' {{data.row'+ seq+ 'f00}} '
        
        out2 += "    <tr><th>{0:d}</th><th>{1}</th><th>{2}</th><td>{3}</td><td>{4}</td><td>{5}</td><td>{6}</td><td colspan='2'>{7}</td></tr>\n".format(v,v1,v2, fc,fd,fe,ff,fg,)
    
    
   
    # by Mark, 2016-08-27
    output=[]
    output.append(outTh)
    output.append(out0)
    output.append(out0v2)
    output.append(out1)
    output.append(out2)
  
    outputfile= intputfile + ".src"
     
    # with open(outputfile,'w') as out:
    #     for data in output:
    #         out.write('\n\n\n')
    #         out.write(data)

    for i,data in enumerate(output):
        # print(i, data)
        outputfile = intputfile + ".out" + "{0:02d}".format(i) 
        with open(outputfile,'w') as out:
            out.write(data)
    
    


    
    # return output
    
#     v=0
# for  v1,v2,v3,v4 in zip(cola,colb,colc, rem):
#     # print ("    <tr><th>{0:s}</th><th>{1:s}</th><td>{2:s}</td><td></td><td></td><td></td><td colspan='2'>{3:s}</td></tr>".format(v1,v2, v3,v4))
#     v += 1
#     a='    data{0:02d}a = models.CharField(default=".",max_length=99,verbose_name="{1:s} {2:s} 零件")'.format(v, v1, v2)
#     b='    data{0:02d}b = models.CharField(default=".",max_length=99,verbose_name="{1:s} {2:s} 進度一")'.format(v, v1, v2)
#     c='    data{0:02d}c = models.CharField(default=".",max_length=99,verbose_name="{1:s} {2:s} 進度二")'.format(v, v1, v2)
#     d='    data{0:02d}d = models.CharField(default=".",max_length=99,verbose_name="{1:s} {2:s} 進度三")'.format(v, v1, v2)
#     e='    data{0:02d}e_00 = models.NullBooleanField(verbose_name="{1:s} {2:s} 備註說明  正常")'.format(v,v1, v2)

#     print("###")
#     # print(a)
    
#     # data01e_00 = models.NullBooleanField(verbose_name="格林柱-備註說明-正常")
#     # data01e_01 = models.NullBooleanField(verbose_name="格林柱-備註說明-磨損")
    
#     if (len(v3)>0):
#         parts = v3.split("|")
#         i=1
#         for part in parts:
#             # print (part)    
#             axx='    data{0:02d}a_{1:02d} = models.NullBooleanField(verbose_name="{2:s} {3:s} 零件  {4:s}")'.format(v,i,v1, v2, part)
#             print (axx)    
#             i += 1
            
#     print(b)
    
#     print(c)
#     print(d)
#     print(e)
    
    
#     if (len(v4)>0):
#         rems = v4.split("|")
#         i=1
#         for rem in rems:
#             # print (rem)    
#             exx='    data{0:02d}e_{1:02d} = models.NullBooleanField(verbose_name="{2:s} {3:s} 備註說明  {4:s}")'.format(v, i, v1,v2,rem)
#             print (exx)    
#             i += 1
 
    
# read1()



# with open(outputfile,'w') as out:
#     for data in make_src():
#         out.write('\n\n\n')
#         out.write(data)


# read2()
# read3()
# read4()
make_src("spec008")
make_src("spec009")
